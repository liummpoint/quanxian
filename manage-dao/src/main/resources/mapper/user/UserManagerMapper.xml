<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manage.dao.user.UserManagerMapper">
    <resultMap id="BaseResultMap" type="com.manage.model.user.UserManager">
        <id column="user_id" jdbcType="INTEGER" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="is_deleted" jdbcType="INTEGER" property="isDeleted"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
    </resultMap>

    <sql id="userManagerColumn">
        user_id,user_name,mobile,email,role_id
    </sql>

    <select id="selectUserName" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM user_manager
        WHERE user_name=#{userName,jdbcType=VARCHAR} AND is_deleted=0;
    </select>

    <select id="selectUserManager" parameterType="com.manage.model.user.UserManager" resultMap="BaseResultMap">
        SELECT
	    u.user_id,
	    u.user_name,
	    u.mobile,
	    u.email,
	    DATE_FORMAT(
		u.create_time,
		'%Y-%m-%d %H:%i:%S'
	     ) AS create_time,
	 u.`status`,r.role_name
     FROM
	 user_manager u
     LEFT JOIN role_manage r ON u.role_id = r.role_id
     WHERE
	 is_deleted = 0
     ORDER BY
	 create_time DESC
    </select>

    <select id="selectUserManagerAll" parameterType="com.manage.model.user.UserManager" resultMap="BaseResultMap">
        SELECT user_id,user_name,mobile,email,create_time,status FROM user_manager
        WHERE is_deleted=0 ORDER BY create_time DESC
    </select>

    <select id="selectUserById" parameterType="com.manage.model.user.UserManager" resultMap="BaseResultMap">
        SELECT user_name,password,mobile,email,remark,role_id FROM user_manager
        WHERE user_id=#{id}
    </select>

    <select id="selectPassword" parameterType="com.manage.model.user.UserManager" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM user_manager
        WHERE user_id=#{id} and `password`=#{password};
    </select>

    <select id="selectUser" parameterType="com.manage.model.user.UserManager" resultMap="BaseResultMap">
        SELECT
        user_id,user_name,password,email,email,role_id,updator,mobile,inputnum,locktime,needtime,loginsessionid
        FROM user_manager
        WHERE user_name=#{userName} AND `password`=#{password} AND `status`=0 AND is_deleted=0
    </select>

    <update id="updatePassword" parameterType="com.manage.model.user.UserManager">
        UPDATE user_manager SET password=#{password} , updator=#{updator},update_time=#{updateTime},needtime=#{needtime}
        WHERE user_id=#{id}
    </update>

    <update id="updateUser" parameterType="com.manage.model.user.UserManager">
        UPDATE user_manager SET user_name=#{userName},mobile=#{mobile},email=#{email},remark=#{remark},role_id=#{roleId}
        WHERE user_id=#{id}
    </update>

    <update id="updateStatus" parameterType="com.manage.model.user.UserManager">
        UPDATE user_manager SET status=#{status,jdbcType=INTEGER}
        WHERE user_id=#{id,jdbcType=INTEGER}
    </update>

    <update id="deleteUser" parameterType="com.manage.model.user.UserManager">
        update user_manager set is_deleted=1
        where user_id=#{id}
    </update>

    <insert id="addUser" parameterType="com.manage.model.user.UserManager">
        INSERT INTO user_manager(user_name,password,mobile,email,remark,role_id)
        values(#{userName},#{password},#{mobile}, #{email},#{remark},#{roleId})
    </insert>

    <select id="selectPasswordMD5" parameterType="com.manage.model.user.UserManager" resultMap="BaseResultMap">
        SELECT
        user_id,user_name,password,email,email,role_id,updator,inputnum,locktime,mobile
        FROM user_manager
        WHERE user_name=#{userName} AND `status`=0 AND is_deleted=0
    </select>

    <select id="selectPasswordMD5Byid" parameterType="com.manage.model.user.UserManager" resultMap="BaseResultMap">
        SELECT
        user_id,user_name,password,email,email,role_id,updator,inputnum,locktime,mobile
        FROM user_manager
        WHERE user_id=#{id} AND `status`=0 AND is_deleted=0
    </select>


    <update id="updateLocktime" parameterType="com.manage.model.user.UserManager">
        UPDATE user_manager SET inputnum=#{inputnum},locktime=#{locktime}
        WHERE user_id=#{id}
    </update>

    <update id="updateLocktimeloginsession" parameterType="com.manage.model.user.UserManager">
        UPDATE user_manager SET inputnum=#{inputnum},locktime=#{locktime},loginsessionid=#{loginsessionid}
        WHERE user_id=#{id}
    </update>

</mapper>